{"remainingRequest":"/home/zyx/workspaces/python/server_management/client/node_modules/babel-loader/lib/index.js!/home/zyx/workspaces/python/server_management/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/zyx/workspaces/python/server_management/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zyx/workspaces/python/server_management/client/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/zyx/workspaces/python/server_management/client/src/views/Register.vue","mtime":1621573371813},{"path":"/home/zyx/workspaces/python/server_management/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zyx/workspaces/python/server_management/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/zyx/workspaces/python/server_management/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zyx/workspaces/python/server_management/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgaW1nIGZyb20gIi4vaW1nL3JlZ2lzdGVyLmpwZyI7CmltcG9ydCB7IEFVVEhfU0lHTlVQIH0gZnJvbSAiQC9zdG9yZS9hY3Rpb25zL2F1dGgiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltZzogaW1nLAogICAgICBuYW1lOiAiIiwKICAgICAgaWRfbnVtYmVyOiAiIiwKICAgICAgcGFzc3dvcmQ6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5sb2FkaW5nQnV0dG9uLnN0YXJ0TG9hZGluZygpOwogICAgICB2YXIgbmFtZSA9IHRoaXMubmFtZSwKICAgICAgICAgIGlkX251bWJlciA9IHRoaXMuaWRfbnVtYmVyLAogICAgICAgICAgcGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChBVVRIX1NJR05VUCwgewogICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgaWRfbnVtYmVyOiBpZF9udW1iZXIsCiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLiRyZWZzLmxvYWRpbmdCdXR0b24uc3RvcExvYWRpbmcoKTsKCiAgICAgICAgX3RoaXMuJHNuYWNrLnN1Y2Nlc3MoewogICAgICAgICAgdGV4dDogIlN1Y2Nlc3NmdWxseSByZWdpc3RlcmVkIHRvICIgKyBfdGhpcy4kc3RvcmUuZ2V0dGVycy5hcHBOYW1lICsgIi4gUGxlYXNlIGxvZyBpbiB0byBjb250aW51ZS4iCiAgICAgICAgfSk7CgogICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCgiLyIpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpcy4kcmVmcy5sb2FkaW5nQnV0dG9uLnN0b3BMb2FkaW5nKCk7CgogICAgICAgIF90aGlzLiRzbmFjay5kYW5nZXIoewogICAgICAgICAgdGV4dDogZXJyb3IubWVzc2FnZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBpbWFnZVByb2dyZXNzOiBmdW5jdGlvbiBpbWFnZVByb2dyZXNzKGluc3RhbmNlLCBpbWFnZSkgewogICAgICB2YXIgcmVzdWx0ID0gaW1hZ2UuaXNMb2FkZWQgPyAnbG9hZGVkJyA6ICdicm9rZW4nOwogICAgICBjb25zb2xlLmxvZygnaW1hZ2UgaXMgJyArIHJlc3VsdCArICcgZm9yICcgKyBpbWFnZS5pbWcuc3JjKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgcGFzc3dvcmRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNwYXNzd29yZCIpOwogICAgdmFyIHBhc3N3b3JkRmVlZGJhY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3RyZW5ndGgtb3V0cHV0Iik7CiAgICB2YXIgc3RyZW5ndGhTdHIgPSB7CiAgICAgIDA6ICJXb3JzdCIsCiAgICAgIDE6ICJCYWQiLAogICAgICAyOiAiV2VhayIsCiAgICAgIDM6ICJHb29kIiwKICAgICAgNDogIlN0cm9uZyIKICAgIH07CiAgICB2YXIgY2FudmFzV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5jYW52YXMtd3JhcCIpOwogICAgdmFyIGNhbnZhcyA9IGNhbnZhc1dyYXBwZXIucXVlcnlTZWxlY3RvcigiY2FudmFzIik7CiAgICB2YXIgcG9zdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLnBvc3RlciIpOwogICAgdmFyIHBvc3RlckltZyA9IHBvc3Rlci5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UubWF0Y2goL1woKC4qPylcKS8pWzFdLnJlcGxhY2UoLygnfCIpL2csICIiKTsgLy8gd2luZG93LmltYWdlc0xvYWRlZChwb3N0ZXIsICk7CiAgICAvLyBpbWFnZXNMb2FkZWQocG9zdGVyLCB7IGJhY2tncm91bmQ6IHRydWUgfSwgKCkgPT4gewogICAgLy8gICAvLyBvbiBjYWxsYmFjaywgYWRkIGlmIHlvdSBkZWVtIHNvbWV0aGluZyBuZWNlc3NhcnkKICAgIC8vIH0pOwogICAgLy8gVGhlIGZvbGxvd2luZyBjb2RlIHdhcyB0YWtlbiBhbmQgbW9kaWZpZWQgZnJvbSBodHRwOi8vanNmaWRkbGUubmV0L3U2YXB4Z2ZrLzM5MC8KICAgIC8vIChDKSBLZW4gRnlyc3RlbmJlcmcsIEVwaXN0ZW1leCwgTGljZW5zZTogQ0MzLjAtYXR0cgogICAgLy8gYW5kIG1lcmdlZCB3aXRoIGh0dHBzOi8vY29kZXBlbi5pby9iYXNzdGEvcGVuL09QVnp5Qj9lZGl0b3JzPTEwMTAKCiAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7CiAgICB2YXIgaW1nUmF0aW87CiAgICB2YXIgd3JhcHBlclJhdGlvOwogICAgdmFyIG5ld1dpZHRoOwogICAgdmFyIG5ld0hlaWdodDsKICAgIHZhciBuZXdYOwogICAgdmFyIG5ld1k7CiAgICB2YXIgcHhGYWN0b3IgPSAxOwogICAgaW1nLnNyYyA9IHBvc3RlckltZzsKCiAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgaW1nV2lkdGggPSBpbWcud2lkdGg7CiAgICAgIHZhciBpbWdIZWlnaHQgPSBpbWcuaGVpZ2h0OwogICAgICBpbWdSYXRpbyA9IGltZ1dpZHRoIC8gaW1nSGVpZ2h0OwogICAgICBzZXRDYW52YXNTaXplKCk7CiAgICAgIHJlbmRlcigpOwogICAgfTsKCiAgICB2YXIgc2V0Q2FudmFzU2l6ZSA9IGZ1bmN0aW9uIHNldENhbnZhc1NpemUoKSB7CiAgICAgIGNhbnZhcy53aWR0aCA9IGNhbnZhc1dyYXBwZXIub2Zmc2V0V2lkdGg7CiAgICAgIGNhbnZhcy5oZWlnaHQgPSBjYW52YXNXcmFwcGVyLm9mZnNldEhlaWdodDsKICAgIH07CgogICAgdmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgdmFyIHcgPSBjYW52YXNXcmFwcGVyLm9mZnNldFdpZHRoOwogICAgICB2YXIgaCA9IGNhbnZhc1dyYXBwZXIub2Zmc2V0SGVpZ2h0OwogICAgICBuZXdXaWR0aCA9IHc7CiAgICAgIG5ld0hlaWdodCA9IGg7CiAgICAgIG5ld1ggPSAwOwogICAgICBuZXdZID0gMDsKICAgICAgd3JhcHBlclJhdGlvID0gbmV3V2lkdGggLyBuZXdIZWlnaHQ7CgogICAgICBpZiAod3JhcHBlclJhdGlvID4gaW1nUmF0aW8pIHsKICAgICAgICBuZXdIZWlnaHQgPSBNYXRoLnJvdW5kKHcgLyBpbWdSYXRpbyk7CiAgICAgICAgbmV3WSA9IChoIC0gbmV3SGVpZ2h0KSAvIDI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbmV3V2lkdGggPSBNYXRoLnJvdW5kKGggKiBpbWdSYXRpbyk7CiAgICAgICAgbmV3WCA9ICh3IC0gbmV3V2lkdGgpIC8gMjsKICAgICAgfSAvLyBweEZhY3RvciB3aWxsIGRlcGVuZCBvbiB0aGUgY3VycmVudCB0eXBlZCBwYXNzd29yZC4KICAgICAgLy8gdmFsdWVzIHdpbGwgYmUgaW4gdGhlIHJhbmdlIFsxLDEwMF0uCgoKICAgICAgdmFyIHNpemUgPSBweEZhY3RvciAqIDAuMDE7IC8vIHR1cm4gb2ZmIGltYWdlIHNtb290aGluZyAtIHRoaXMgd2lsbCBnaXZlIHRoZSBwaXhlbGF0ZWQgZWZmZWN0CgogICAgICBjdHgubW96SW1hZ2VTbW9vdGhpbmdFbmFibGVkID0gc2l6ZSA9PT0gMSA/IHRydWUgOiBmYWxzZTsKICAgICAgY3R4LndlYmtpdEltYWdlU21vb3RoaW5nRW5hYmxlZCA9IHNpemUgPT09IDEgPyB0cnVlIDogZmFsc2U7CiAgICAgIGN0eC5pbWFnZVNtb290aGluZ0VuYWJsZWQgPSBzaXplID09PSAxID8gdHJ1ZSA6IGZhbHNlOwogICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7IC8vIGRyYXcgb3JpZ2luYWwgaW1hZ2UgdG8gdGhlIHNjYWxlZCBzaXplCgogICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCwgdyAqIHNpemUsIGggKiBzaXplKTsgLy8gdGhlbiBkcmF3IHRoYXQgc2NhbGVkIGltYWdlIHRodW1iIGJhY2sgdG8gZmlsbCBjYW52YXMKICAgICAgLy8gQXMgc21vb3RoaW5nIGlzIG9mZiB0aGUgcmVzdWx0IHdpbGwgYmUgcGl4ZWxhdGVkCgogICAgICBjdHguZHJhd0ltYWdlKGNhbnZhcywgMCwgMCwgdyAqIHNpemUsIGggKiBzaXplLCBuZXdYLCBuZXdZLCBuZXdXaWR0aCArIDAuMDUgKiB3LCBuZXdIZWlnaHQgKyAwLjA1ICogaCk7CiAgICB9OwoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHNldENhbnZhc1NpemUoKTsKICAgICAgcmVuZGVyKCk7CiAgICB9KTsKICAgIHBhc3N3b3JkSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigiaW5wdXQiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciB2YWwgPSBwYXNzd29yZElucHV0LnZhbHVlOwogICAgICB2YXIgcmVzdWx0ID0gd2luZG93Lnp4Y3Zibih2YWwpOyAvLyBXZSB3YW50IHRvIHJldmVhbCB0aGUgaW1hZ2UgYXMgdGhlIHBhc3N3b3JkIGdldHMgc3Ryb25nZXIuIFNpbmNlIHRoZSB6eGN2Ym4uc2NvcmUgaGFzCiAgICAgIC8vIG9ubHkgNSBkaWZmZXJlbnQgdmFsdWVzICgwLTQpIHdlIHdpbGwgdXNlIHRoZSB6eGN2Ym4uZ3Vlc3Nlc19sb2cxMCBvdXRwdXQuCiAgICAgIC8vIFRoZSBndWVzc2VzX2xvZzEwIHdpbGwgYmUgPj0gMTEgd2hlbiB0aGUgcGFzc3dvcmQgaXMgY29uc2lkZXJlZCBzdHJvbmcsCiAgICAgIC8vIHNvIHdlIHdhbnQgdG8gbWFwIGEgZmFjdG9yIG9mIDEgKGFsbCBwaXhlbGF0ZWQpIHRvIDEwMCAoY2xlYXIgaW1hZ2UpIHRvCiAgICAgIC8vIGEgdmFsdWUgb2YgMCB0byAxMSBvZiBndWVzc2VzX2xvZzEwLgogICAgICAvLyBUaGlzIHJlc3VsdCB3aWxsIGJlIHVzZWQgaW4gdGhlIHJlbmRlciBmdW5jdGlvbi4KCiAgICAgIHB4RmFjdG9yID0gOTkgLyAxMSAqIE1hdGgubWluKDExLCBNYXRoLnJvdW5kKHJlc3VsdC5ndWVzc2VzX2xvZzEwKSkgKyAxOyAvLyBzbyB3ZSBzZWUgbW9zdCBvZiB0aGUgdGltZSBwaXhlbHMgcmF0aGVyIHRoYW4gYXBwcm9hY2hpbmcgYSBjbGVhciBpbWFnZSBzb29uZXIuLgoKICAgICAgaWYgKHB4RmFjdG9yICE9IDEgJiYgcHhGYWN0b3IgIT0gMTAwKSB7CiAgICAgICAgcHhGYWN0b3IgLT0gcHhGYWN0b3IgLyAxMDAgKiA1MDsKICAgICAgfQoKICAgICAgcGFzc3dvcmRGZWVkYmFjay5pbm5lckhUTUwgPSB2YWwgIT09ICIiID8gIlBhc3N3b3JkIHN0cmVuZ3RoOiAiLmNvbmNhdChzdHJlbmd0aFN0cltyZXN1bHQuc2NvcmVdKSA6ICIiOwogICAgICByZW5kZXIoKTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"auth-page loading\">\n    <main>\n      <div class=\"content content--side\">\n        <header class=\"codrops-header uk-flex uk-flex-center\">\n          <h1 class=\"uk-margin-remove uk-text-center\">\n            Welcome to {{ $store.getters.appName }}\n          </h1>\n          <p class=\"\">Fill in the form and get started today!</p>\n        </header>\n        <div class=\"form\">\n          <div class=\"form__item\">\n            <label class=\"form__label\" for=\"name\">Name</label>\n            <input class=\"form__input\" type=\"text\" v-model=\"name\" id=\"name\" />\n          </div>\n          <div class=\"form__item\">\n            <label class=\"form__label\" for=\"id_number\">Student Number</label>\n            <input\n              class=\"form__input\"\n              type=\"text\"\n              v-model=\"id_number\"\n              id=\"id_number\"\n            />\n          </div>\n          <div class=\"form__item\">\n            <label class=\"form__label\" for=\"password\">Password</label>\n            <div class=\"form__input-wrap\">\n              <input\n                class=\"form__input\"\n                type=\"password\"\n                v-model=\"password\"\n                id=\"password\"\n              />\n              <p class=\"form__password-strength\" id=\"strength-output\"></p>\n            </div>\n          </div>\n          <div\n            class=\"uk-flex uk-flex-center uk-flex-middle uk-margin-medium-top uk-visible@s\"\n          >\n            <span uk-icon=\"icon: info; ratio: 3;\"></span>\n            <span class=\"uk-margin-left\">\n              <small\n                >We strongly recommend that you register an account carefully, \n                the registration subsystem is not perfect yet!</small\n              >\n            </span>\n          </div>\n          <div class=\"form__item form__item--actions\">\n            <span\n              >Already have an account?\n              <router-link class=\"form__link\" to=\"/login\"\n                >Login here</router-link\n              >\n            </span>\n            <button-spinner ref=\"loadingButton\" @click=\"register()\"\n              >Register</button-spinner\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"content content--side\">\n        <div class=\"poster\" :style=\"'background-image:url(' + img + ')'\" v-images-loaded:on.progress=\"imageProgress\"></div>\n        <div class=\"canvas-wrap\">\n          <canvas></canvas>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport img from \"./img/register.jpg\";\nimport { AUTH_SIGNUP } from \"@/store/actions/auth\";\n\nexport default {\n  data() {\n    return {\n      img: img,\n      name: \"\",\n      id_number: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    register() {\n      this.$refs.loadingButton.startLoading();\n      const { name, id_number, password } = this;\n      this.$store\n        .dispatch(AUTH_SIGNUP, { name, id_number, password })\n        .then(() => {\n          this.$refs.loadingButton.stopLoading();\n          this.$snack.success({\n            text:\n              \"Successfully registered to \" +\n              this.$store.getters.appName +\n              \". Please log in to continue.\"\n          });\n          this.$router.push(\"/\");\n        })\n        .catch(error => {\n          this.$refs.loadingButton.stopLoading();\n          this.$snack.danger({\n            text: error.message\n          });\n        });\n    },\n    imageProgress(instance, image ){\n        const result = image.isLoaded ? 'loaded' : 'broken';\n        console.log( 'image is ' + result + ' for ' + image.img.src );\n    }\n  },\n  mounted() {\n    const passwordInput = document.querySelector(\"#password\");\n    const passwordFeedback = document.querySelector(\"#strength-output\");\n    const strengthStr = {\n      0: \"Worst\",\n      1: \"Bad\",\n      2: \"Weak\",\n      3: \"Good\",\n      4: \"Strong\"\n    };\n    const canvasWrapper = document.querySelector(\".canvas-wrap\");\n    const canvas = canvasWrapper.querySelector(\"canvas\");\n    const poster = document.querySelector(\".poster\");\n    const posterImg = poster.style.backgroundImage\n      .match(/\\((.*?)\\)/)[1]\n      .replace(/('|\")/g, \"\");\n    // window.imagesLoaded(poster, );\n    // imagesLoaded(poster, { background: true }, () => {\n    //   // on callback, add if you deem something necessary\n    // });\n\n    // The following code was taken and modified from http://jsfiddle.net/u6apxgfk/390/\n    // (C) Ken Fyrstenberg, Epistemex, License: CC3.0-attr\n\n    // and merged with https://codepen.io/bassta/pen/OPVzyB?editors=1010\n\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    let imgRatio;\n    let wrapperRatio;\n    let newWidth;\n    let newHeight;\n    let newX;\n    let newY;\n\n    let pxFactor = 1;\n\n    img.src = posterImg;\n    img.onload = () => {\n      const imgWidth = img.width;\n      const imgHeight = img.height;\n      imgRatio = imgWidth / imgHeight;\n      setCanvasSize();\n      render();\n    };\n\n    const setCanvasSize = () => {\n      canvas.width = canvasWrapper.offsetWidth;\n      canvas.height = canvasWrapper.offsetHeight;\n    };\n\n    const render = () => {\n      const w = canvasWrapper.offsetWidth;\n      const h = canvasWrapper.offsetHeight;\n\n      newWidth = w;\n      newHeight = h;\n      newX = 0;\n      newY = 0;\n      wrapperRatio = newWidth / newHeight;\n\n      if (wrapperRatio > imgRatio) {\n        newHeight = Math.round(w / imgRatio);\n        newY = (h - newHeight) / 2;\n      } else {\n        newWidth = Math.round(h * imgRatio);\n        newX = (w - newWidth) / 2;\n      }\n\n      // pxFactor will depend on the current typed password.\n      // values will be in the range [1,100].\n      const size = pxFactor * 0.01;\n\n      // turn off image smoothing - this will give the pixelated effect\n      ctx.mozImageSmoothingEnabled = size === 1 ? true : false;\n      ctx.webkitImageSmoothingEnabled = size === 1 ? true : false;\n      ctx.imageSmoothingEnabled = size === 1 ? true : false;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // draw original image to the scaled size\n      ctx.drawImage(img, 0, 0, w * size, h * size);\n      // then draw that scaled image thumb back to fill canvas\n      // As smoothing is off the result will be pixelated\n      ctx.drawImage(\n        canvas,\n        0,\n        0,\n        w * size,\n        h * size,\n        newX,\n        newY,\n        newWidth + 0.05 * w,\n        newHeight + 0.05 * h\n      );\n    };\n\n    window.addEventListener(\"resize\", () => {\n      setCanvasSize();\n      render();\n    });\n\n    passwordInput.addEventListener(\"input\", () => {\n      const val = passwordInput.value;\n      const result = window.zxcvbn(val);\n      // We want to reveal the image as the password gets stronger. Since the zxcvbn.score has\n      // only 5 different values (0-4) we will use the zxcvbn.guesses_log10 output.\n      // The guesses_log10 will be >= 11 when the password is considered strong,\n      // so we want to map a factor of 1 (all pixelated) to 100 (clear image) to\n      // a value of 0 to 11 of guesses_log10.\n      // This result will be used in the render function.\n      pxFactor = (99 / 11) * Math.min(11, Math.round(result.guesses_log10)) + 1;\n\n      // so we see most of the time pixels rather than approaching a clear image sooner..\n      if (pxFactor != 1 && pxFactor != 100) {\n        pxFactor -= (pxFactor / 100) * 50;\n      }\n\n      passwordFeedback.innerHTML =\n        val !== \"\" ? `Password strength: ${strengthStr[result.score]}` : \"\";\n      render();\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../styles/auth-styles\";\n</style>\n"],"sourceRoot":"src/views"}]}